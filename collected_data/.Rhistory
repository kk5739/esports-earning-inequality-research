jsonplayer <- rbind(jsonplayer, jsonplayer2)
if(nrow(jsonplayer) == 300) {
Sys.sleep(1)
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=300")
Sys.sleep(1)
jsonplayer2 <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
jsonplayer <- rbind(jsonplayer, jsonplayer2)
Sys.sleep(1)
}}}
#turn date column into actual date
jsonplayer <- mutate(jsonplayer, EndDate = ymd(EndDate))
#might need to make prizes and exchange rate
#integers too
jsonplayer$Prize <- as.numeric(gsub('[$,]', '', jsonplayer$Prize))
jsonplayer$ExchangeRate <- as.numeric(gsub('[$,]', '', jsonplayer$ExchangeRate))
earnings <- mutate(jsonplayer, Earnings = Prize * ExchangeRate / TeamPlayers)
#be careful to change this to the correct GameId!
earnings <- filter(earnings, GameId == "151")
playerdata <- c()
playerdata <- append(playerdata, playerID)
for(i in 1:24) {
eYear <- i+1997
enddate <- paste0(eYear,"-12-31")
startdate <- paste0(eYear,"-01-01")
earningsyear <- filter(earnings, EndDate < enddate & EndDate > startdate)
if(nrow(earningsyear) > 0) {
yearearnings <- sum(earningsyear$Earnings)
playerdata <- append(playerdata, yearearnings, after = length(1+i))
} else {
playerdata <- append(playerdata, NA, after = length(1+i))
}
}
df <- rbind(df, playerdata)
}
x <- c("PlayerID", "X21", "X20", "X19", "X18",
"X17", "X16", "X15", "X14",
"X13", "X12", "X11", "X10",
"X09", "X08", "X07", "X06",
"X05", "X04", "X03", "X02",
"X01", "X00", "X99", "X98")
colnames(df) <- x
df
write.csv(df, "playerearningsStar1-70.csv")
DataREAD <- read.csv("allplayersStar2.csv", na.strings = "NA")
PlayerID <- DataREAD$PlayerId
PlayerID <- PlayerID[71:2115] #Must change this if repeating scrape due to interruption
playerIDs <- as.numeric(gsub('[$,]', '', PlayerID))
#Next, feed a vector of player ids
#to "playerID" the for loop should
#return a dataframe with player ids
#and then the earnings for each year
#Note: must clear the global environment
#for it to work. (use broom in environment tab
#on RStudio)
df <- data.frame(matrix(ncol = 25, nrow = 0))
for(i in 1:length(playerIDs)) {
#assigns the i player ID
playerID <- playerIDs[[i]]
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=0")
Sys.sleep(1)
jsonplayer <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
Sys.sleep(1)
#this subset uses if to figure out if
#there is more data left. If so it
#will collect another set of data
if(nrow(jsonplayer) == 100) {
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=100")
Sys.sleep(1)
jsonplayer2 <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
jsonplayer <- rbind(jsonplayer, jsonplayer2)
if(nrow(jsonplayer) == 200) {
Sys.sleep(1)
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=200")
Sys.sleep(1)
jsonplayer2 <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
jsonplayer <- rbind(jsonplayer, jsonplayer2)
if(nrow(jsonplayer) == 300) {
Sys.sleep(1)
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=300")
Sys.sleep(1)
jsonplayer2 <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
jsonplayer <- rbind(jsonplayer, jsonplayer2)
Sys.sleep(1)
}}}
#turn date column into actual date
jsonplayer <- mutate(jsonplayer, EndDate = ymd(EndDate))
#might need to make prizes and exchange rate
#integers too
jsonplayer$Prize <- as.numeric(gsub('[$,]', '', jsonplayer$Prize))
jsonplayer$ExchangeRate <- as.numeric(gsub('[$,]', '', jsonplayer$ExchangeRate))
earnings <- mutate(jsonplayer, Earnings = Prize * ExchangeRate / TeamPlayers)
#be careful to change this to the correct GameId!
earnings <- filter(earnings, GameId == "151")
playerdata <- c()
playerdata <- append(playerdata, playerID)
for(i in 1:24) {
eYear <- i+1997
enddate <- paste0(eYear,"-12-31")
startdate <- paste0(eYear,"-01-01")
earningsyear <- filter(earnings, EndDate < enddate & EndDate > startdate)
if(nrow(earningsyear) > 0) {
yearearnings <- sum(earningsyear$Earnings)
playerdata <- append(playerdata, yearearnings, after = length(1+i))
} else {
playerdata <- append(playerdata, NA, after = length(1+i))
}
}
df <- rbind(df, playerdata)
}
DataREAD <- read.csv("allplayersStar2.csv", na.strings = "NA")
PlayerID <- DataREAD$PlayerId
PlayerID <- PlayerID[72:2115] #Must change this if repeating scrape due to interruption
playerIDs <- as.numeric(gsub('[$,]', '', PlayerID))
#Next, feed a vector of player ids
#to "playerID" the for loop should
#return a dataframe with player ids
#and then the earnings for each year
#Note: must clear the global environment
#for it to work. (use broom in environment tab
#on RStudio)
df <- data.frame(matrix(ncol = 25, nrow = 0))
for(i in 1:length(playerIDs)) {
#assigns the i player ID
playerID <- playerIDs[[i]]
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=0")
Sys.sleep(1)
jsonplayer <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
Sys.sleep(1)
#this subset uses if to figure out if
#there is more data left. If so it
#will collect another set of data
if(nrow(jsonplayer) == 100) {
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=100")
Sys.sleep(1)
jsonplayer2 <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
jsonplayer <- rbind(jsonplayer, jsonplayer2)
if(nrow(jsonplayer) == 200) {
Sys.sleep(1)
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=200")
Sys.sleep(1)
jsonplayer2 <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
jsonplayer <- rbind(jsonplayer, jsonplayer2)
if(nrow(jsonplayer) == 300) {
Sys.sleep(1)
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupPlayerTournaments?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&playerid=", playerID,"&offset=300")
Sys.sleep(1)
jsonplayer2 <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
jsonplayer <- rbind(jsonplayer, jsonplayer2)
Sys.sleep(1)
}}}
#turn date column into actual date
jsonplayer <- mutate(jsonplayer, EndDate = ymd(EndDate))
#might need to make prizes and exchange rate
#integers too
jsonplayer$Prize <- as.numeric(gsub('[$,]', '', jsonplayer$Prize))
jsonplayer$ExchangeRate <- as.numeric(gsub('[$,]', '', jsonplayer$ExchangeRate))
earnings <- mutate(jsonplayer, Earnings = Prize * ExchangeRate / TeamPlayers)
#be careful to change this to the correct GameId!
earnings <- filter(earnings, GameId == "151")
playerdata <- c()
playerdata <- append(playerdata, playerID)
for(i in 1:24) {
eYear <- i+1997
enddate <- paste0(eYear,"-12-31")
startdate <- paste0(eYear,"-01-01")
earningsyear <- filter(earnings, EndDate < enddate & EndDate > startdate)
if(nrow(earningsyear) > 0) {
yearearnings <- sum(earningsyear$Earnings)
playerdata <- append(playerdata, yearearnings, after = length(1+i))
} else {
playerdata <- append(playerdata, NA, after = length(1+i))
}
}
df <- rbind(df, playerdata)
}
x <- c("PlayerID", "X21", "X20", "X19", "X18",
"X17", "X16", "X15", "X14",
"X13", "X12", "X11", "X10",
"X09", "X08", "X07", "X06",
"X05", "X04", "X03", "X02",
"X01", "X00", "X99", "X98")
colnames(df) <- x
72 + 2044
write.csv(df, "playerearningsStar72-2115.csv")
setwd()
setwd(playerearningsStar1.csv)
1+3
a=1
b=2
a+b
plot(1,1)
plot(3,4)
1+3
4*5
dbl_vardbl_var = c(1, 2.5, 4.5)
dbl_var
dbl_var = c(1, 2.5, 4.5)
dbl_var = c(1, 2.5, 4.5)
dbl_var
int_var = c(1L, 6L, 10L)
int_var
as.integer(dbl_var)
as.character(dbl_var)
1:10
as.character(int_var)
1:5
c(1,5,10)
?seq()
seq(from = 1, to=21,by=2)
seq(from=1,to=21,by3)
seq(from=1,to=21,by=3)
seq(from = 21, to = 1, by = -2)
seq(0, 21, lenght.out = 15)
seq(0, 21, length.out = 15)
Sys.timezone()
Sys.time()
x = 1
x = c(1, 2, 3)
l = list(1:3, list(letters[1:5], c(TRUE, FALSE, TRUE)))
str(l)
l2 = append(l1, list(c(2.5, 4.2)))
str(l2)
df = data.frame (col1 = 1:3,
col2 = c ("this", "is", "text"),
col3 = c (TRUE, FALSE, TRUE),
col4 = c (2.5, 4.2, pi))
str(df)
df = data.frame (col1 = 1:3,
col2 = c ("this", "is", "text"),
col3 = c (TRUE, FALSE, TRUE),
col4 = c (2.5, 4.2, pi),
stringsAsFactors = FALSE)
str(df)
v1 = 1:3
v2 = c ("this", "is", "text")
v3 = c (TRUE, FALSE, TRUE)
data.frame (col1 = v1, col2 = v2, col3 = v3)
l = list (item1 = 1:3,
item2 = c ("this", "is", "text"),
item3 = c (2.5, 4.2, 5.1))
l
df
v4 = c ("A", "B", "C")
cbind(df, v4)
v5 = c (4, "R", F, 1.1)
rbind(df, v5)
v4
name(v4,col4)
df[2:3, ]
df[, 2:3]
dfd
df
df[ , 2]
df[2 , ]
df[ , 2, drop = FALSE]
df[ 2, , drop=false]
df[2, , drop= FALSE]
df[2, , drop= true]
df[ , 2, drop = false]
df[ , 2, drop = FALSE]
df[ , 2, drop = TRUE]
x = c(1:4, NA, 6:7, NA)
x
is.na(x)
df = data.frame (col1 = c (1:3, NA),
col2 = c ("this", NA,"is", "text"),
col3 = c (TRUE, FALSE, TRUE, TRUE),
col4 = c (2.5, 4.2, 3.2, NA),
stringsAsFactors = FALSE)
df
which(df)
which(na(df))
which(is.na(df))
install.packages('httr') #If do not already have
install.packages("httr")
install.packages('dplyr') #If do not already have
library(httr)
library(dplyr)
library(jsonlite)
APILINK <- 'http://api.esportsearnings.com/v0/LookupGameById?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=439'
gamefeaturesGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
gamefeaturesGET
gamefeaturesGET
APILINK <- 'http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=439&offset=0'
topgameplayersGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
for (i in 1:21) {
offset <- i*100
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&gameid=439&offset=", offset)
jsonplayers <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
topgameplayersGET <- rbind(topgameplayersGET, jsonplayers)
#I was getting an error because it was going to quick
#so I aded this to slow down
Sys.sleep(1)
}
View(topgameplayersGET)
#set your working directory to where you want the file
setwd("~/Desktop/R/Esport Study/OneDrive_2022-01-15/Kyeongmo_data")
#this will write the file as a csv in the location
#you have selected
write.csv(topgameplayersGET, "allplayersRainbowSixSiege.csv")
APILINK <- 'http://api.esportsearnings.com/v0/LookupGameById?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=371'
gamefeaturesGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
gamefeaturesGET
APILINK <- 'http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=371&offset=0'
topgameplayersGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
for (i in 1:13) {
offset <- i*100
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&gameid=371&offset=", offset)
jsonplayers <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
topgameplayersGET <- rbind(topgameplayersGET, jsonplayers)
#I was getting an error because it was going to quick
#so I aded this to slow down
Sys.sleep(1)
}
#set your working directory to where you want the file
setwd("~/Desktop/R/Esport Study/OneDrive_2022-01-15/Kyeongmo_data")
#this will write the file as a csv in the location
#you have selected
write.csv(topgameplayersGET, "allplayersHeroesoftheStorm.csv")
View(topgameplayersGET)
gamefeaturesGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
library(httr)
library(dplyr)
library(jsonlite)
APILINK <- 'http://api.esportsearnings.com/v0/LookupGameById?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=409'
gamefeaturesGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
gamefeaturesGET
APILINK <- 'http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=409&offset=0'
topgameplayersGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
for (i in 1:21) {
offset <- i*100
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&gameid=409&offset=", offset)
jsonplayers <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
topgameplayersGET <- rbind(topgameplayersGET, jsonplayers)
#I was getting an error because it was going to quick
#so I aded this to slow down
Sys.sleep(1)
}
library(httr)
library(dplyr)
library(jsonlite)
APILINK <- 'http://api.esportsearnings.com/v0/LookupGameById?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=409'
gamefeaturesGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
gamefeaturesGET
APILINK <- 'http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=409&offset=0'
topgameplayersGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
for (i in 1:21) {
offset <- i*100
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&gameid=409&offset=", offset)
jsonplayers <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
topgameplayersGET <- rbind(topgameplayersGET, jsonplayers)
#I was getting an error because it was going to quick
#so I aded this to slow down
Sys.sleep(1)
}
View(topgameplayersGET)
library(httr)
library(dplyr)
library(jsonlite)
APILINK <- 'http://api.esportsearnings.com/v0/LookupGameById?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=409'
gamefeaturesGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
gamefeaturesGET
APILINK <- 'http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=409&offset=0'
topgameplayersGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
for (i in 1:21) {
offset <- i*100
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&gameid=409&offset=", offset)
jsonplayers <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
topgameplayersGET <- rbind(topgameplayersGET, jsonplayers)
#I was getting an error because it was going to quick
#so I aded this to slow down
Sys.sleep(1)
}
#this will write the file as a csv in the location
#you have selected
write.csv(topgameplayersGET, "allplayersRocketLeague.csv")
View(topgameplayersGET)
library(httr)
library(dplyr)
library(jsonlite)
APILINK <- 'http://api.esportsearnings.com/v0/LookupGameById?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=162'
gamefeaturesGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
gamefeaturesGET
APILINK <- 'http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=162&offset=0'
topgameplayersGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
for (i in 1:43) {
offset <- i*100
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&gameid=162&offset=", offset)
jsonplayers <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
topgameplayersGET <- rbind(topgameplayersGET, jsonplayers)
#I was getting an error because it was going to quick
#so I aded this to slow down
Sys.sleep(1)
}
#set your working directory to where you want the file
setwd("~/Desktop/R/Esport Study/OneDrive_2022-01-15/Kyeongmo_data")
#this will write the file as a csv in the location
#you have selected
write.csv(topgameplayersGET, "allplayersRocketLeague.csv")
#this will write the file as a csv in the location
#you have selected
write.csv(topgameplayersGET, "allplayersCounter-Strike.csv")
APILINK <- 'http://api.esportsearnings.com/v0/LookupGameById?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=566'
gamefeaturesGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
gamefeaturesGET
APILINK <- 'http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=a9abe33e39059a81b2fa1a9648bfbd38572205890f9bdfa50ceca7208a9da065&gameid=566&offset=0'
topgameplayersGET <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
for (i in 1:16) {
offset <- i*100
APILINK <- paste0("http://api.esportsearnings.com/v0/LookupHighestEarningPlayersByGame?apikey=b0e0da7e58c715f8618fbf2bb0f01920395531a048ccc4857274c6ccd7c157f9&gameid=566&offset=", offset)
jsonplayers <- APILINK %>%
httr::GET(config = httr::config(ssl_verifypeer = FALSE)) %>%
content(as = "text") %>%
fromJSON()
topgameplayersGET <- rbind(topgameplayersGET, jsonplayers)
#I was getting an error because it was going to quick
#so I aded this to slow down
Sys.sleep(1)
}
#this will write the file as a csv in the location
#you have selected
write.csv(topgameplayersGET, "allplayersApexLegends.csv")
